-- Code created by Kwik - Copyright: kwiksher.com 2016-- Version: 4.0.0 14-- Project: Comic--local _M = {}local _K = require("Application")local frame = require("extlib.Frame")-------------------------------------------- Capture and set group position--function _M:localPos(UI)  local sceneGroup  = UI.scene.view  local layer       = UI.layer  --  UI.layerSet_frames = {      {      myLName = "1",      x       = 543,      y       = 333,      width   = 907,      height  = 535    },      {      myLName = "2",      x       = 1004,      y       = 335,      width   = 648,      height  = 538    },      {      myLName = "3",      x       = 199,      y       = 933,      width   = 423,      height  = 547    },      {      myLName = "4",      x       = 573,      y       = 931,      width   = 634,      height  = 609    },      {      myLName = "5",      x       = 1122,      y       = 933,      width   = 407,      height  = 545    },      {      myLName = "6",      x       = 201,      y       = 1556,      width   = 426,      height  = 584    },      {      myLName = "7",      x       = 667,      y       = 1553,      width   = 397,      height  = 592    },      {      myLName = "8",      x       = 1119,      y       = 1555,      width   = 407,      height  = 593    },  }end--function _M:allListeners(UI)  local sceneGroup  = UI.scene.view  frame:initialize()  frame:setColor( 0, 0, 0, 0.5 )  local frames = UI.layerSet_frames  local index = 1  local scale = 1.5  local cX, cY = display.contentCenterX, display.contentCenterY  local prevDeltaX, prevDeltaY = 0, 0  local capture---[[  timer.performWithDelay( 3000, function()    local target = frames[index]    frame.view.x, frame.view.y = cX, cY    frame:setBounds( target.width/4*scale, target.height/4*scale, true )    index = index + 1    local mX, mY = _K.ultimatePosition(target.x, target.y)    UI.layer.background:translate( cX - mX - prevDeltaX , cY-mY - prevDeltaY)    UI.layer.ballons:translate( cX - mX - prevDeltaX , cY-mY - prevDeltaY)    prevDeltaX, prevDeltaY = cX - mX , cY-mY    local frameBounds =      {          xMin = cX - target.width/8,          xMax = cX + target.width/8,          yMin = cY - target.height/8,          yMax = cY + target.height/8,      }      if capture then            capture:removeSelf( )      end        capture = display.captureBounds( frameBounds )        capture.x, capture.y = cX, cY        -- capture:scale(scale, scale)        transition.to(capture, {time = 1000, xScale = scale, yScale = scale,transition=easing.outCubic,          onComplete = function()            if index == #frames then              timer.performWithDelay( 4000, function()                capture:removeSelf( )                UI.layer.background.x, UI.layer.background.y = cX, cY                UI.layer.ballons.x, UI.layer.ballons.y = cX, cY                frame:setBounds( display.contentWidth, display.contentHeight, true )                end, 1)            end          end          })  -- end, 3)  end, #frames)]]end--function _M:toDispose()end--function _M:willHide()end--function _M:localVars()end--return _M