-- Code created by Kwik - Copyright: kwiksher.com 2016-- Version:-- Project: Comic--local _M = {}--local _K = require "Application"--function _M:myMain()end--function _M:localVars ()end--function _M:localPos()end--function _M:allListeners(UI)  -- UI.scene:dispatchEvent({name="pn1_anim_linear_750", phase = "didShow", UI=UI})	}  self:repoHeader(UI)  self:buildAnim(UI)		-- 			if _K.gt.linear_750 then		-- 	_K.gt.linear_750:play()		-- end		end--function _M:toDispose()	_K.cancelAllTweens()	_K.cancelAllTransitions()end--function _M:toDestory()end----local function getPos(layer, _endX, _endY)	local endX, endY =  _K.ultimatePosition(_endX, _endY)	    mX = layer.x + endX + layer.width/2  - layer.x    mY = layer.y + endY + layer.height/2 - layer.y	return mX, mYend--function _M:repoHeader(UI)	local layer = UI.layer	end----function _M:buildAnim(UI)	local layer = UI.layer	-- Wait request for '+gtName+'\r\n';	if layer.pn1 == nil then return end	layer.pn1.xScale = layer.pn1.oriXs	layer.pn1.yScale = layer.pn1.oriYs			local linear_750 = function(event)			if _K.gt.linear_750 then				_K.gt.linear_750:toBeginning()			end		end -- end of function		local _restart = false		local deltaX = 0		local deltaY = 0		local onEnd_ = function()				if _restart then						layer.pn1.x				 = layer.pn1.oriX - deltaX						layer.pn1.y				 = layer.pn1.oriY - deltaY						-- layer.pn1.x				 = display.contentCenterX						-- layer.pn1.y				 = display.contentCenterY						layer.pn1.alpha		 = layer.pn1.oldAlpha						layer.pn1.rotation	= 0						layer.pn1.isVisible = true						layer.pn1.xScale		= layer.pn1.oriXs						layer.pn1.yScale		= layer.pn1.oriYs												end			end --ends reStart for linear_750			local mX, mY = getPos(layer.pn1, -14, 53)			deltaX = layer.pn1.oriX -mX			deltaY = layer.pn1.oriY -mY			mX, mY = display.contentCenterX - deltaX, display.contentCenterY - deltaY			local target = nil			if layer.pn1.scrollView then				target = layer.pn1.scrollView			else				target = layer.pn1			end						_K.gt.linear_750 = _K.gtween.new(			target,			3,								{										x = mX, y = mY,										alpha=1,										rotation=0,				},			{				ease = _K.gtween.easing.Linear,				repeatCount = 1,				reflect = false,				delay=0.1,				onComplete=onEnd_				})			_K.gt.linear_750:pause()  		_K.gt.linear_750:toBeginning()  		layer.pn1.anim["linear_750"] = _K.gt.linear_750		--	-- linear_750()end--function _M:play(UI)			-- _K.gt.linear_750:toBeginning()		_K.gt.linear_750:play()	end--function _M:resume(UI)			_K.gt.linear_750:play()	end--return _M